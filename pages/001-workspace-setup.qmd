---
title: Workspace setup
---

FILE: <https://github.com/Bristol-Training/introducing-parallel-python/blob/ecc76aedc65dc3c3c1aaf19017d27a13382cd1cc/data/shakespeare.tar.bz2>


For the purpose of this course we recommend using a free tool called JupyterLab which provides you with a local editor in your web browser where you can write and run Python code. The easiest way to get access to JupyterLab is to [install Anaconda](https://www.anaconda.com/products/individual#Downloads) which is a piece of software which includes Python along with lots of other tools. It is freely available for Windows, MacOS and Linux.

Anaconda can be installed into your home area on your computer so if you are on a work laptop, for example, you will not need any special permissions. Once Anaconda is installed, start "Anaconda Navigator" and press the JupyterLab button on the main screen:

![](../assets/navigator.png "Anaconda Navigator")

This will open JupyterLab in your default web browser and will look something like this:

![](../assets/jupyterlab1.png "JupyterLab")

The way that we will be setting up the space is to have a text editor on the left-hand side of the screen and a terminal on the right hand side. We'll use the editor to write our code and the terminal to run it.

In the launcher tab, scoll down to the "Text File" entry and click that. It will turn the editor into a text editor. Then go to File â†’ New and select "Terminal". It will now have two tabs inside the interface, one labelled "untitled.txt" and the other labelled "Terminal 1":

![](../assets/jupyterlab2.png "JupyterLab")

The contents of the Terminal tab will likely be a little different on your computer, compared to what is shown in thise images but that is ok.

To make our lives easier, let's rearange things so that we can see the text editor at the same time as the terminal. Do this by pressing and holding down the left mouse button on the tab that says "Terminal 1" and slowly dragging it to the right-hand side of the window. You'll see a blue outline like this:

![](../assets/jupyterlab3.png "JupyterLab")

Release the mouse button and you'll end up with the two showing side-by-side:

![](../assets/jupyterlab4.png "JupyterLab")


### Working directory

Setting the correct working directory helps organize your project files and ensures that your code can find necessary resources and dependencies. We will revisit this concept later on, but for now be mindful that the space where you save your scripts has to be the same than the working directory in your Command Prompt/Terminal.

If you are using the Command Prompt (Windows) you can check your current directory with
```{.bash filename="Command Prompt"}
cd
```

If you are using a Terminal (MacOS and Linux) you can check your current directory with
```{.bash filename="Terminal"}
pwd
```


We're now ready to get started!

